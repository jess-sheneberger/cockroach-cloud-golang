/*
CockroachDB Cloud API

This is an early access, experimental version of the Cloud API. The interface and output is subject to change, and there may be bugs.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->

API version: 2022-03-31
Contact: support@cockroachlabs.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ccloud

import (
	"encoding/json"
)

// ServerlessClusterCreateSpecification struct for ServerlessClusterCreateSpecification
type ServerlessClusterCreateSpecification struct {
	// Region values should match the cloud provider's zone code. For example, for Oregon, set region_name to \"us-west2\" for GCP and \"us-west-2\" for AWS.
	Regions    []string `json:"regions"`
	SpendLimit int32    `json:"spend_limit"`
}

// NewServerlessClusterCreateSpecification instantiates a new ServerlessClusterCreateSpecification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerlessClusterCreateSpecification(regions []string, spendLimit int32) *ServerlessClusterCreateSpecification {
	this := ServerlessClusterCreateSpecification{}
	this.Regions = regions
	this.SpendLimit = spendLimit
	return &this
}

// NewServerlessClusterCreateSpecificationWithDefaults instantiates a new ServerlessClusterCreateSpecification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerlessClusterCreateSpecificationWithDefaults() *ServerlessClusterCreateSpecification {
	this := ServerlessClusterCreateSpecification{}
	return &this
}

// GetRegions returns the Regions field value
func (o *ServerlessClusterCreateSpecification) GetRegions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value
// and a boolean to check if the value has been set.
func (o *ServerlessClusterCreateSpecification) GetRegionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Regions, true
}

// SetRegions sets field value
func (o *ServerlessClusterCreateSpecification) SetRegions(v []string) {
	o.Regions = v
}

// GetSpendLimit returns the SpendLimit field value
func (o *ServerlessClusterCreateSpecification) GetSpendLimit() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SpendLimit
}

// GetSpendLimitOk returns a tuple with the SpendLimit field value
// and a boolean to check if the value has been set.
func (o *ServerlessClusterCreateSpecification) GetSpendLimitOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpendLimit, true
}

// SetSpendLimit sets field value
func (o *ServerlessClusterCreateSpecification) SetSpendLimit(v int32) {
	o.SpendLimit = v
}

func (o ServerlessClusterCreateSpecification) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["regions"] = o.Regions
	}
	if true {
		toSerialize["spend_limit"] = o.SpendLimit
	}
	return json.Marshal(toSerialize)
}

type NullableServerlessClusterCreateSpecification struct {
	value *ServerlessClusterCreateSpecification
	isSet bool
}

func (v NullableServerlessClusterCreateSpecification) Get() *ServerlessClusterCreateSpecification {
	return v.value
}

func (v *NullableServerlessClusterCreateSpecification) Set(val *ServerlessClusterCreateSpecification) {
	v.value = val
	v.isSet = true
}

func (v NullableServerlessClusterCreateSpecification) IsSet() bool {
	return v.isSet
}

func (v *NullableServerlessClusterCreateSpecification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerlessClusterCreateSpecification(val *ServerlessClusterCreateSpecification) *NullableServerlessClusterCreateSpecification {
	return &NullableServerlessClusterCreateSpecification{value: val, isSet: true}
}

func (v NullableServerlessClusterCreateSpecification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerlessClusterCreateSpecification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
